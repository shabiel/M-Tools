ZZUTXTD7 ;FO-OAK/JLI - CONTINUATION OF UNIT TESTS ;06/06/08  15:08
 ;;7.3;TOOLKIT;**107UT**;
 D EN^XTMUNIT("ZZUTXTD7",1)
 Q
 ;
PARSE1 ;
 N VAL,NEWVAL,NEWSTR
 S VAL="Q $S($G(X):$P($ZV,"")"")_"")"",1:$P($P($ZV,"") "",2),""(""))"
 S NEWVAL=$$GETSTR^XTDEBUG6(.NEWSTR,VAL," ,:")
 D CHKEQ^XTMUNIT(NEWSTR,"Q","BAD COMMAND RETURNED")
 D CHKEQ^XTMUNIT(NEWVAL,"$S($G(X):$P($ZV,"")"")_"")"",1:$P($P($ZV,"") "",2),""(""))","BAD REMAINDER RETURNED")
 D CHKEQ^XTMUNIT($G(NEWSTR("TERM"))," ","BAD TERMINATOR CHARACTER")
 ;
 S NEWVAL=$$GETSTR^XTDEBUG6(.NEWSTR,NEWVAL," ,:")
 D CHKEQ^XTMUNIT(NEWSTR,"$S($G(X):$P($ZV,"")"")_"")"",1:$P($P($ZV,"") "",2),""(""))","BAD COMMAND RETURNED")
 D CHKEQ^XTMUNIT(NEWVAL,"","BAD REMAINDER RETURNED")
 D CHKEQ^XTMUNIT($G(NEWSTR("TERM")),"","BAD TERMINATOR CHARACTER")
 Q
 ;
DOLRTEXT ; make sure $T arguments refer to proper routine
 N RESULT,ARG,ROUTINE,VAL
 S ARG="X=$T(+0^ZZUTXTD7)",ROUTINE="XTMUNIT"
 S RESULT=$$DOLRTEXT^XTDEBUG(ARG,ROUTINE)
 D CHKEQ^XTMUNIT(RESULT,"X=$T(+0^ZZUTXTD7)","BAD RETURN FOR COMPLETE REFERENCE")
 S ARG="X=$T(+0)"
 D CHKEQ^XTMUNIT($$DOLRTEXT^XTDEBUG(ARG,ROUTINE),"X=$T(+0^XTMUNIT)","BAD RETURN FOR SIMPLE TAG ONLY")
 S ARG="X=$T(+0)_""XXX"""
 D CHKEQ^XTMUNIT($$DOLRTEXT^XTDEBUG(ARG,ROUTINE),"X=$T(+0^XTMUNIT)_""XXX""","BAD RETURN FOR SIMPLE TAG WITH FOLLOWING CODE")
 S VAL="+0^ZZUTXTD1",ARG="X=$T(@VAL)"
 D CHKEQ^XTMUNIT($$DOLRTEXT^XTDEBUG(ARG,ROUTINE),"X=$T(+0^ZZUTXTD1)","BAD RETURN FOR VALUE IN VARIABLE")
 S VAL="+0",ARG="X=$T(@VAL)"
 D CHKEQ^XTMUNIT($$DOLRTEXT^XTDEBUG(ARG,ROUTINE),"X=$T(+0^XTMUNIT)","BAD RETURN FOR VALUE IN VARIABLE, NO ROUTINE")
 S VAL="+0",ARG="X=$TEXT(+0^ZZUTXTD7)_""AA""_$TEXT(@VAL)"
 N EXPECTED S EXPECTED="X=$T(+0^ZZUTXTD7)_""AA""_$T(+0^XTMUNIT)"
 D CHKEQ^XTMUNIT($$DOLRTEXT^XTDEBUG(ARG,ROUTINE),EXPECTED,"BAD RETURN FOR MULTIPEL $T VALUES")
 Q
 ;
QUERYNUM ; WRITE OF ?nn
 N ZZUTXTIO
 S ZZUTXTIO=IO
 D
 . N XWBOS,XOBDATA,IO
 . S XWBOS=1,IO=ZZUTXTIO,IO(0)=IO
 . S XTDEBLOC=$$GETGLOB^XTDEBUG1()
 . S @XTDEBLOC@("CONSOLE-OUT")=""
 . S @XTDEBLOC@("LASTLVL")=0,XTDEBLVL=0
 . S @XTDEBLOC@("LVL",0,"XTDEBARG","CMND")="W",^("ARGS",1)="?15"
 . S XTDEBNUM=1,XTDEBQUI=1,XTDEBCON=1
 . S XTDEBARG("ARGS",1)="?15"
 . D WRITCMND^XTDEBUG1
 . Q
 D CHKEQ^XTMUNIT($L($G(@XTDEBLOC@("CONSOLE-OUT"))),14,"INCORRECT RETURN FOR EMPTY LINE")
 D
 . N XWBOS,XOBDATA,IO
 . S XWBOS=1,IO=ZZUTXTIO,IO(0)=IO
 . S XTDEBLOC=$$GETGLOB^XTDEBUG1()
 . S @XTDEBLOC@("CONSOLE-OUT")="AAA"
 . S @XTDEBLOC@("LASTLVL")=0,XTDEBLVL=0
 . S @XTDEBLOC@("LVL",0,"XTDEBARG","CMND")="W",^("ARGS",1)="?15"
 . S XTDEBNUM=1,XTDEBQUI=1,XTDEBCON=1
 . S XTDEBARG("ARGS",1)="?15"
 . D WRITCMND^XTDEBUG1
 . Q
 D CHKEQ^XTMUNIT($L($G(@XTDEBLOC@("CONSOLE-OUT"))),14,"INCORRECT RETURN FOR PARTIAL LINE")
 D
 . N XWBOS,XOBDATA,IO
 . S XWBOS=1,IO=ZZUTXTIO,IO(0)=IO
 . S XTDEBLOC=$$GETGLOB^XTDEBUG1()
 . S @XTDEBLOC@("CONSOLE-OUT")="123456789012345678"
 . S @XTDEBLOC@("LASTLVL")=0,XTDEBLVL=0
 . S @XTDEBLOC@("LVL",0,"XTDEBARG","CMND")="W",^("ARGS",1)="?15"
 . S XTDEBNUM=1,XTDEBQUI=1,XTDEBCON=1
 . S XTDEBARG("ARGS",1)="?15"
 . D WRITCMND^XTDEBUG1
 . Q
 D CHKEQ^XTMUNIT($L($G(@XTDEBLOC@("CONSOLE-OUT"))),18,"INCORRECT RETURN FOR LONGER LINE")
 Q
 ;
NAKEDGLO ;
 N LINE,RESULTS,LINE,XVAL
 K ^TMP($J,"NAKEDGLOB")
 S ^TMP($J,"NAKEDGLOB",1)="NODE1"
 S LINE="D TESTGLO^ZZUTXTD7"
 D START^XTDEBUG(.RESULTS,LINE)
 D NEXT^XTDEBUG(.RESULTS,"RUN")
 D CHKEQ^XTMUNIT($G(XVAL),"NODE1","BAD SET FROM GLOBAL NODE")
 D CHKEQ^XTMUNIT($G(^TMP($J,"NAKEDGLOB","SETGLOBX")),45,"WRONG SET INTO NAKED GLOBAL")
 D CHKEQ^XTMUNIT($G(^TMP($J,"NAKEDGLOB","SETGLOBX",25)),"NEW","WRONG SET INTO SECOND LEVEL NAKED GLOBAL")
 K ^TMP($J,"NAKEDGLOB")
 Q
 ;
TESTKILL ;
 K ^TMP($J,"ZZUTXTD7","TESTKILL")
 D  ;
 . N  ; intentional for test Under an argumentless DO
 . S A="A",B="B",C="C"
 . K (A,B) ; intentional for test
 . S ^TMP($J,"ZZUTXTD7","TESTKILL","A")=$G(A),^("B")=$G(B),^("C")=$G(C)
 . Q
 D CHKEQ^XTMUNIT($G(^TMP($J,"ZZUTXTD7","TESTKILL","A")),"A","PROBLEM WITH EXCLUSIVE KILL - DIDN'T PROTECT")
 D CHKEQ^XTMUNIT($G(^TMP($J,"ZZUTXTD7","TESTKILL","C")),"","PROBLEM WITH EXCLUSIVE KILL - DIDN'T KILL")
 K ^TMP($J,"ZZUTXTD7","TESTKILL")
 Q
 ;
TESTGLO ;
 ; ZEXCEPT:XVAL  NEWed in NAKEDGLO and used there
 S XVAL=^TMP($J,"NAKEDGLOB",1),^("SETGLOBX")=45,^("SETGLOBX",25)="NEW"
 Q
 ;
TESTDUZ ;
 N DUZ,DUZY
 S DUZY=0,DUZY(4)="",DUZY(0)="Ab",DUZY(0)="@"
 S DUZ=0,DUZ(0)="Ab",DUZ(0)="@"
 Q
 ;
XTENT ;
 ;;PARSE1;PARSE WITH COMMAS,ETC. INSIDE PARENS
 ;;NAKEDGLO;NAKED GLOBAL PROCESSING
 ;;DOLRTEXT;handle $T references
 ;;QUERYNUM;check on write of ?nn
