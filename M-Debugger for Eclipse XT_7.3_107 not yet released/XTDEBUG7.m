XTDEBUG7 ;JLI/OAK_OIFO- ;06/07/08  17:20
 ;;7.3;TOOLKIT;**107**;Apr 25, 1995;Build 14
 ;;Per VHA Directive 2004-038, this routine should not be modified
 D EN^XTMUNIT("ZZUTXTD1")
 Q
 ;
REASON(XTDEBTYP,XTDEBNUM) ;
 N XTDEBLOC,XTDEBCUR,XTDEBROU,XTDEBLNM,XTDEBRES,XTDEBLVL
 S XTDEBLOC=$$GETGLOB^XTDEBUG(),XTDEBRES=$$RESULTS^XTDEBUG()
 S XTDEBLVL=$G(@XTDEBLOC@("LASTLVL"))
 S @XTDEBLOC@("REASONDONE")=XTDEBTYP
 M @XTDEBLOC@("XTDEBDUZ")=DUZ ; save off current DUZ array
 D DEBUG^XTMLOG("REASON","XTDEBTYP")
 K @XTDEBRES@(" REASON")
 I $D(@XTDEBLOC@("LVL",XTDEBLVL,"XTDEBARG","CMND")) D
 . ; following code was in NXT version
 . N XTDEBLIN,XTDEBUGI
 . S XTDEBLIN="" F XTDEBUGI=XTDEBNUM+1:1 Q:'$D(@XTDEBLOC@("LVL",XTDEBLVL,"XTDEBARG","ARGS",XTDEBUGI))  S XTDEBLIN=XTDEBLIN_$S(XTDEBLIN'="":",",1:"")_^(XTDEBUGI)_$S($D(^(XTDEBUGI,"POSTCOND")):":"_^("POSTCOND"),1:"")
 . S XTDEBLIN=@XTDEBLOC@("LVL",XTDEBLVL,"XTDEBARG","CMND")_$S($D(^("PRECOND")):":"_^("PRECOND"),1:"")_" "_XTDEBLIN ;$G(^("ARGS",+XTDEBNUM))
 . I $G(@XTDEBLOC@("LASTCMND"))'="" S @XTDEBRES@(" REASON",1)="   LAST COMMAND: "_@XTDEBLOC@("LASTCMND") ; INSERTED  JLI 051026
 . I $G(@XTDEBLOC@("CURRCMND"))'="" S @XTDEBRES@(" REASON",2)="   NEXT COMMAND: "_@XTDEBLOC@("CURRCMND") ; JLI 070719
 . S @XTDEBLOC@("LASTCMND")=$S($G(@XTDEBLOC@("CURRCMND"))'="":^("CURRCMND"),1:XTDEBLIN) ; ADDED JLI 051026
 . D DEBUG^XTMLOG("REASON_LASTCMND","XTDEBLIN")
 . Q
 S XTDEBLNM=$G(@XTDEBLOC@("LVL",XTDEBLVL,"LINE")),XTDEBROU=$G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE"))
 S @XTDEBRES@(" REASON")="SECTION=REASON"
 S @XTDEBRES@(" REASON",9)="SECTION=LOCATION"
 S @XTDEBRES@(" REASON",10)="ROUTINE: "_XTDEBROU
 S @XTDEBRES@(" REASON",11)="LINE: "_XTDEBLNM
 S XTDEBCUR="" I XTDEBLNM'="",XTDEBROU'="" S XTDEBCUR=$$TAGNUM(XTDEBROU,XTDEBLNM)_"^"_XTDEBROU
 I (XTDEBTYP="DONE") K @XTDEBRES@(" REASON") D  S @XTDEBRES@(" REASON",0)="DONE -- PROCESSING FINISHED"
 . S @XTDEBRES@(" REASON")="SECTION=REASON"
 . I $G(@XTDEBLOC@("CONSOLE-OUT"))'="" D SETWRITE
 . Q
 I (XTDEBTYP="EXCLKILL") K @XTDEBRES@(" REASON") D  S @XTDEBRES@(" REASON",0)="TERMINATED -- EXECUTION OF NEXT COMMAND [EXCLUSIVE OR GLOBAL KILL] WILL DESTROY CONNECTION"
 . S @XTDEBRES@(" REASON")="SECTION=REASON"
 . I $G(@XTDEBLOC@("CONSOLE-OUT"))'="" D SETWRITE
 . N I F I=2:1 Q:'$D(@XTDEBLOC@("LVL",I))  K @XTDEBLOC@("LVL",I)
 . S @XTDEBLOC@("LVL",1,"CMND")=""
 . Q
 I (XTDEBTYP="STEP") S @XTDEBRES@(" REASON",0)="STEP MODE: "_XTDEBCUR_"    "_$$GETLINE(XTDEBROU,"+"_XTDEBLNM)
 I (XTDEBTYP="WATCH") S @XTDEBRES@(" REASON",0)="WATCH ON VARIABLES: "_XTDEBCUR_" AT +"_XTDEBLNM_"^"_XTDEBROU_"    "_$$GETLINE(XTDEBROU,"+"_XTDEBLNM)
 I (XTDEBTYP="BREAK") S @XTDEBRES@(" REASON",0)="BREAKPOINT: "_XTDEBCUR_"    "_$$GETLINE(XTDEBROU,"+"_XTDEBLNM)
 I (XTDEBTYP="START") S @XTDEBRES@(" REASON",0)="START:  "_@XTDEBLOC@("LVL",0,"CMND")
 I (XTDEBTYP="READ") D
 . S @XTDEBRES@(" REASON",0)="READ:  "_$G(XTDEBCUR)
 . D SETREAD
 . Q
 I (XTDEBTYP="WRITE") D
 . S @XTDEBRES@(" REASON",0)="WRITE:  "_$G(XTDEBCUR)_"  LINE: "_$G(@XTDEBLOC@("CONSOLE-OUT"))
 . D SETWRITE
 . Q
 I '$D(@XTDEBRES@(" REASON",0)) S @XTDEBRES@(" REASON",0)="UNIDENTIFIED TYPE -- "_$G(XTDEBTYP)
 D DEBUG^XTMLOG("LEAVING REASON: ",$NA(@XTDEBRES@(" REASON")),1)
 Q
 ;
SETWRITE ;
 ; ZEXCEPT: XTDEBLOC,XTDEBRES  -- FROM REASON
 S @XTDEBRES@(" REASON",3)="SECTION=WRITE"
 S @XTDEBRES@(" REASON",4)="LINE: "_$G(@XTDEBLOC@("CONSOLE-OUT")) K @XTDEBLOC@("CONSOLE-OUT")
 D DEBUG^XTMLOG("REASON WRITING: ",$NA(@XTDEBRES@(" REASON",4)))
 Q
 ;
SETREAD ;
 N XTDEBLVL
 ; ZEXCEPT: XTDEBLOC,XTDEBRES  -- FROM REASON
 S XTDEBLVL=@XTDEBLOC@("LASTLVL"),XTDEBLVL=$NA(@XTDEBLOC@("LVL",XTDEBLVL))
 S @XTDEBRES@(" REASON",3)="SECTION=READ"
 S @XTDEBRES@(" REASON",4)="LINE: "_$G(@XTDEBLOC@("CONSOLE-OUT")) K @XTDEBLOC@("CONSOLE-OUT")
 S @XTDEBRES@(" REASON",5)="NUM CHARS: "_$G(@XTDEBLVL@("READ-NUMCHARS")) K @XTDEBLVL@("READ-NUMCHARS")
 S @XTDEBRES@(" REASON",6)="TIMEOUT: "_$G(@XTDEBLVL@("READ-TIMEOUT")) K @XTDEBLVL@("READ-TIMEOUT")
 S @XTDEBRES@(" REASON",7)="STAR-READ: "_$G(@XTDEBLVL@("READ-STAR")) K @XTDEBLVL@("READ-STAR")
 S @XTDEBRES@(" REASON",8)="TYPE-AHEAD: "_$S($P($G(^VA(200,DUZ,200)),U,9)="Y":1,1:0)
 D DEBUG^XTMLOG("REASON READ",$NA(@XTDEBRES@(" REASON")),1)
 Q
 ;
OPENDO ;(XTDEBCMD,XTDEBVAR) ;
 N XTDEBPAR,XTDEBLNM,XTDEBLOC,XTDEBARG,XTDEBCOD,XTDEBMRK
 N XTDEBLVJ,XTDEBTAG,XTDEBUGJ,XTDEBUGCH,XTDEBUGI
 ; following line with 3 added variables from laptop version
 ; N XTDEBROU,XTDEBLVL,XTDEBCMD,XTDEBVAR,XTDEBLVN,XTDEBTAG,XTDEBLVJ,XTDEBUGJ
 N XTDEBROU,XTDEBLVL,XTDEBCMD,XTDEBVAR,XTDEBLVN
 S XTDEBLOC=$$GETGLOB^XTDEBUG()
 S XTDEBLVL=+$G(@XTDEBLOC@("LASTLVL"))
 D DEBUG^XTMLOG("OPENDO1",$NA(@XTDEBLOC@("LVL")),1)
 S XTDEBCMD=$G(@XTDEBLOC@("LVL",XTDEBLVL,"OPENDO")) K ^("OPENDO")
 S XTDEBUGI="",XTDEBUGIF=0,XTDEBCMD1=XTDEBCMD,XTDEBCMD=""
 F  S XTDEBUGCH=$E(XTDEBCMD1,1,1) Q:XTDEBUGCH=""  D
 . S XTDEBCMD1=$E(XTDEBCMD1,2,999)
 . I XTDEBUGCH="@" S XTDEBUGIF=1,XTDEBUGI="" Q
 . I XTDEBUGIF,XTDEBUGCH'?.P S XTDEBUGI=XTDEBUGI_XTDEBUGCH Q
 . I XTDEBUGCH?.P,XTDEBUGIF S XTDEBCMD=XTDEBCMD_@XTDEBUGI_XTDEBUGCH,XTDEBUGI=0 Q
 . S XTDEBCMD=XTDEBCMD_XTDEBUGCH
 I XTDEBUGIF S XTDEBCMD=XTDEBCMD_@XTDEBUGI
 S XTDEBPAR=$P(XTDEBCMD,"(",2,99),XTDEBMRK=$P($P(XTDEBCMD,"("),"^",2) I XTDEBMRK="" S XTDEBCMD=$P(XTDEBCMD,"(")_"^"_@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE")_"("_XTDEBPAR
 I $D(@XTDEBLOC@("LVL",XTDEBLVL,"XTDEBVAR")) S XTDEBVAR=^("XTDEBVAR")
 ; following lines from laptop version (commented out here)
 S XTDEBTAG="" F XTDEBUGJ=0:1 S XTDEBLVJ=XTDEBLVL-XTDEBUGJ Q:XTDEBLVJ'>0  D  I XTDEBTAG'="" Q
 . I $$TAGNUM($G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE")),$G(@XTDEBLOC@("LVL",XTDEBLVJ,"LINE")))'="" S XTDEBTAG=$$TAGNUM($G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE")),$G(@XTDEBLOC@("LVL",XTDEBLVJ,"LINE")))
 . Q
 S XTDEBMRK=" > " I $D(@XTDEBLOC@("LVL",XTDEBLVL-1,"ROUTINE")) S XTDEBMRK=XTDEBTAG_"^"_$G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE"))_" > "
 S XTDEBMRK="                              "_XTDEBMRK,XTDEBMRK=$E(XTDEBMRK,$L(XTDEBMRK)-25,$L(XTDEBMRK))
 ; end of lines from laptop version
 ; followin line replaced above lines from laptop version
 ;S XTDEBMRK=$$STKFROM(XTDEBLOC,XTDEBLVL-1)
 ; end of replacement for laptop version
 D TAGPARTS(.XTDEBPAR,XTDEBCMD)
 S XTDEBLNM=$$LINENUM(XTDEBPAR("ROUTINE"),XTDEBPAR("LINE"))
 S XTDEBROU=$$ROUGLOB^XTDEBUG()
 D DEBUG^XTMLOG("OPENDO","XTDEBCMD")
 D DEBUG^XTMLOG("OPENDO","XTDEBPAR",1)
 I $D(XTDEBPAR("ROUTINE")) D  ;
 . S XTDEBCOD=@XTDEBROU@($$ROULOC^XTDEBUG(XTDEBPAR("ROUTINE")),XTDEBLNM,0) I 1
 . S XTDEBCMD=$$GETSTR^XTDEBUG(.XTDEBARG,XTDEBCOD," "),XTDEBARG=$P(XTDEBARG,"(",2,999) S:$L(XTDEBARG)>0 XTDEBARG=$E(XTDEBARG,1,$L(XTDEBARG)-1)
 . D DEBUG^XTMLOG("","XTDEBARG,XTDEBPAR(""ARGS"")",1)
 . D OPENTAG^XTDEBUG(XTDEBPAR("ARGS"),XTDEBARG)
 . S XTDEBLVN=@XTDEBLOC@("LASTLVL")
 . S XTDEBLVL=$NA(@XTDEBLOC@("LVL",XTDEBLVN)),@XTDEBLVL@("CODE")=XTDEBCOD
 . S @XTDEBLVL@("ROUTINE")=XTDEBPAR("ROUTINE"),@XTDEBLVL@("LINE")=XTDEBLNM,@XTDEBLVL@("CMNDNUM")=0,@XTDEBLVL@("CMND")=XTDEBCMD
 . S @XTDEBLOC@("STK",XTDEBLVN)=XTDEBMRK_$$TAGNUM(XTDEBPAR("ROUTINE"),XTDEBLNM)_"^"_XTDEBPAR("ROUTINE")
 . I $D(XTDEBVAR) S @XTDEBLOC@("VAR",XTDEBLVL)=XTDEBVAR ; variable name to be assigned return value
 . Q
 D DEBUG^XTMLOG("OPENDO2",$NA(@XTDEBLOC@("LVL")),1)
 G DOLINE^XTDEBUG
 ;
TAGPARTS(XTDEBRES,XTDEBINP) ;
 K XTDEBRES N XTDEBTST,XTDEBGLO,XTDEBLVL,XTDEBLIN,XTDEBINV
 S XTDEBTST=$P(XTDEBINP,"(") I XTDEBTST'["^" S XTDEBGLO=$$GETGLOB^XTDEBUG(),XTDEBLVL=@XTDEBGLO@("LASTLVL"),XTDEBINP=XTDEBTST_"^"_@XTDEBGLO@("LVL",XTDEBLVL,"ROUTINE")_$S($P(XTDEBINP,"(",2)'="":"("_$P(XTDEBINP,"(",2,200),1:"")
 S XTDEBLIN=$P(XTDEBINP,"^") I XTDEBLIN="" S XTDEBLIN="+1"
 S XTDEBRES("LINE")=XTDEBLIN
 S XTDEBRES("ROUTINE")=$P($P(XTDEBINP,"^",2),"(") I XTDEBRES("ROUTINE")="" S XTDEBLVL=@XTDEBGLO@("LASTLVL"),XTDEBRES("ROUTINE")=@XTDEBGLO@("LVL",XTDEBLVL,"ROUTINE")
 S XTDEBINP=$P(XTDEBINP,"(",2,99)
 I XTDEBINP'="" S XTDEBINP=$E(XTDEBINP,1,$L(XTDEBINP)-1)
 F  S XTDEBINV=$P(XTDEBINP,"XTDEBV(",2) Q:XTDEBINV=""  S XTDEBINV="XTDEBV("_(+XTDEBINV)_")" S XTDEBINP=$P(XTDEBINP,XTDEBINV)_@XTDEBINV_$P(XTDEBINP,XTDEBINV,2,99)
 S XTDEBRES("ARGS")=XTDEBINP
 Q
 ;
SETROU(XTDEBROU) ;
 N XTDEBRO1,I,XTDEBLOC
 I XTDEBROU="@" Q -1
 S XTDEBLOC=$$GETGLOB^XTDEBUG(),XTDEBLOC=$NA(@XTDEBLOC@("ROU"))
 ;   load the routine into memory and into a global location
 S XTDEBRO1=$O(@XTDEBLOC@("B",XTDEBROU,0))
 I XTDEBRO1'>0 S XTDEBRO1=1 F I=0:0 S I=$O(@XTDEBLOC@(I)) Q:I'>0  S XTDEBRO1=I+1
 K @XTDEBLOC@(XTDEBRO1) D  ; decided to rebuild routines each time in case modified between calls
 . N DIF,XCNP,X
 . S DIF=$NA(@XTDEBLOC@(XTDEBRO1))
 . S DIF=$E(DIF,1,$L(DIF)-1)_","
 . S XCNP=0,X=XTDEBROU
 . X ^%ZOSF("LOAD")
 . ; make it so we can find the routine
 . S @XTDEBLOC@("B",XTDEBROU,XTDEBRO1)=""
 . ; and so we can find TAGS within the routine
 . F I=0:0 S I=$O(@XTDEBLOC@(XTDEBRO1,I)) Q:I'>0  S X=^(I,0),@XTDEBLOC@(XTDEBRO1,"LINES")=I I $E(X,1)'=" ",$E(X,1)'=$C(9) S X=$P($P($P(X," "),"("),$C(9)),@XTDEBLOC@(XTDEBRO1,"TAG",X,I)=""
 . Q
 Q XTDEBRO1
 ;
GETLINE(XTDEBROU,XTDEBLIN) ;
 N LINNUM,INDEX,LINE,XTDEBLOC
 D DEBUG^XTMLOG("GETLINE")
 S INDEX=$$ROULOC(XTDEBROU)
 S LINNUM=0 I INDEX>0 S LINNUM=$$LINENUM(XTDEBROU,XTDEBLIN)
 I LINNUM>0 S XTDEBLOC=$$ROUGLOB^XTDEBUG(),LINE=$G(@XTDEBLOC@(INDEX,LINNUM,0))
 E  S LINE=""
 Q LINE
 ;
ROULOC(XTDEBROU) ;
 N XTDEBLOC,XTDEBNUM
 D DEBUG^XTMLOG("IN ROULOC 1")
 I XTDEBROU="" Q 0 ; TODO: handle no entry
 I XTDEBROU="@" Q 0 ; TODO:
 D DEBUG^XTMLOG("IN ROULOC 2")
 S XTDEBLOC=$$ROUGLOB^XTDEBUG()
 S XTDEBNUM=$O(@XTDEBLOC@("B",XTDEBROU,0))
 I XTDEBNUM'>0 S XTDEBNUM=$$SETROU(XTDEBROU)
 Q XTDEBNUM
 ;
STKFROM(XTDEBLOC,XTDEBLVL) ; returns from part of stack
 N XTDEBMRK,XTDEBROU,XTDEBLIN
 S XTDEBMRK=" < " I $D(@XTDEBLOC@("LVL",XTDEBLVL-1,"ROUTINE")) S XTDEBMRK=" < "_$$TAGNUM($G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE")),$G(@XTDEBLOC@("LVL",XTDEBLVL,"LINE")))_"^"_$G(@XTDEBLOC@("LVL",XTDEBLVL,"ROUTINE"))
 I XTDEBMRK'=" < " S XTDEBROU=$G(^("ROUTINE")),XTDEBLIN=$G(^("LINE"))
 I XTDEBMRK'=" < " D DEBUG^XTMLOG("STKFROM","XTDEBLVL,XTDEBMRK,XTDEBROU,XTDEBLIN")
 Q XTDEBMRK
 ;
LINENUM(XTDEBROU,XTDEBLIN) ; get line number relative to top of routine
 N XTDEBLOC,XTDEBNAM,LINNUM,OFFSET,XTDEBNUM
 D DEBUG^XTMLOG("LINENUM")
 S XTDEBNUM=$$ROULOC(XTDEBROU)
 I XTDEBNUM'>0 Q 0
 S XTDEBLOC=$$ROUGLOB^XTDEBUG()
 S XTDEBNAM=$P(XTDEBLIN,"+"),LINNUM=$P(XTDEBLIN,"+",2),OFFSET=0
 I XTDEBNAM'="" S OFFSET=$O(@XTDEBLOC@(XTDEBNUM,"TAG",XTDEBNAM,0)) I OFFSET<1 Q 0
 S LINNUM=OFFSET+LINNUM
 Q LINNUM
 ;
TAGNUM(XTDEBROU,XTDEBLIN) ; get line number relative to closest TAG, e.g., TAG+3
 N XTDEBLAS,XTDEBNAM,XTDEBTAG,XTDEBLOC,XTDEBLIE,XTDEBNUM
 S XTDEBLOC=$$ROUGLOB^XTDEBUG()
 I XTDEBLIN="" Q ""
 D DEBUG^XTMLOG("TAGNUM","XTDEBROU,XTDEBLIN")
 S XTDEBNUM=$$ROULOC(XTDEBROU)
 I XTDEBNUM'>0 Q 0 ; TODO handle no entry
 S XTDEBLAS=0
 S XTDEBTAG="",XTDEBNAM="" F  S XTDEBNAM=$O(@XTDEBLOC@(XTDEBNUM,"TAG",XTDEBNAM)) Q:XTDEBNAM=""  S XTDEBLIE=$O(^(XTDEBNAM,0)) I XTDEBLIE'>XTDEBLIN,XTDEBLIE>XTDEBLAS S XTDEBLAS=XTDEBLIE,XTDEBTAG=XTDEBNAM
 S XTDEBLAS=XTDEBLIN-XTDEBLAS
 Q XTDEBTAG_$S(XTDEBLAS>0:"+"_XTDEBLAS,1:"")
 ;
SETVARS(XTDEBRES,XTDEBVAR) ;
 N XTDEBVAL S XTDEBVAL=""
 F  S XTDEBVAL=$O(XTDEBVAR(XTDEBVAL)) Q:XTDEBVAL=""  S @(XTDEBVAL)=XTDEBVAR(XTDEBVAL)
 Q
