ZZUTXTD5 ; ;05/07/08  13:02
 ;;7.3;TOOLKIT;**???**;Apr 25, 1995
 ;D KILLALL^ZZUTXTD1
 I $T(EN^XTMUNIT)'="" D EN^XTMUNIT("ZZUTXTD5")
 Q
 ;
RETVALS ;
 N XTDEBLOC,XTDEBRES
 S XTDEBLOC=$$GETGLOB^XTDEBUG() K @XTDEBLOC
 S @XTDEBLOC@("VALUE1")=""
 S @XTDEBLOC@("VALUE2")="",@XTDEBLOC@("VALUE2","COND")="COND2"
 D RETVALS^XTDEBUG(.XTDEBRES,XTDEBLOC)
 D CHKEQ^XTMUNIT("VALUE1;",$G(@XTDEBRES@(1)),"INCORRECT RETURN FOR 1")
 D CHKEQ^XTMUNIT("VALUE2;COND2",$G(@XTDEBRES@(2)),"INCORRECT RETURN FOR 2")
 K @XTDEBLOC,@XTDEBRES
 Q
 ;
SETWATCH ;
 N GLOBRES,GLOBLOC
 S GLOBLOC=$$GETGLOBS^XTDEBUG5(),GLOBLOC=$NA(@GLOBLOC@("WATCH"))
 K @GLOBLOC
 D SETWATCH^XTDEBUG(.GLOBRES,"VARIABLX")
 D CHKEQ^XTMUNIT(1,$D(@GLOBLOC@("VARIABLX")),"NO DATA IN GLOBAL 1")
 D CHKEQ^XTMUNIT(0,$D(@GLOBLOC@("VARIABLX","COND")),"DATA IN GLOBAL 1 COND")
 D CHKEQ^XTMUNIT("VARIABLX;",$G(@GLOBRES@(1)),"NO RETURN FOR GLOBAL 1")
 ;
 D SETWATCH^XTDEBUG(.GLOBRES,"VARIABLY;X>0")
 D CHKEQ^XTMUNIT(1,$D(@GLOBLOC@("VARIABLY"))#2,"NO DATA IN GLOBAL 2")
 D CHKEQ^XTMUNIT(1,$D(@GLOBLOC@("VARIABLY","COND")),"NO DATA IN GLOBAL 2 COND")
 D CHKEQ^XTMUNIT("VARIABLY;X>0",$G(@GLOBRES@(2)),"NO RETURN FOR GLOBAL 1")
 K @GLOBLOC,@GLOBRES
 Q
 ;
CLRWATCH ;
 N GLOBRES,GLOBLOC
 S GLOBLOC=$$GETGLOBS^XTDEBUG5(),GLOBLOC=$NA(@GLOBLOC@("WATCH"))
 K @GLOBLOC
 D SETWATCH^XTDEBUG(.GLOBRES,"VARIABLX;")
 D CHKEQ^XTMUNIT(1,$D(@GLOBLOC@("VARIABLX")),"NO DATA IN GLOBAL 1")
 D CLRWATCH^XTDEBUG(.GLOBRES,"VARIABLX;")
 D CHKEQ^XTMUNIT(0,$D(@GLOBLOC@("VARIABLX")),"STILL DATA IN GLOBAL 1 COND")
 D CHKEQ^XTMUNIT("",$G(@GLOBRES@(1)),"VALUE RETURNED FOR GLOBAL 1")
 ;
 D SETWATCH^XTDEBUG(.GLOBRES,"VARIABLY;X>0")
 D CHKEQ^XTMUNIT(1,$D(@GLOBLOC@("VARIABLY"))#2,"NO DATA IN GLOBAL 2")
 D CLRWATCH^XTDEBUG(.GLOBRES,"VARIABLY;X>0")
 D CHKEQ^XTMUNIT(0,$D(@GLOBLOC@("VARIABLY")),"STILL DATA IN GLOBAL 2 COND")
 D CHKEQ^XTMUNIT("",$G(@GLOBRES@(1)),"NO RETURN FOR GLOBAL 2")
 K @GLOBLOC,@GLOBRES
 Q
 ;
NEWTEST ;
 N DIC,DIFILEI,DIENS,ZZRESULT,FILEI,JLITEST,ZZUTXTD5
 S DIC="^DOPT(""DII"",",DIC(0)="AEQZ"
 S JLITEST=$NA(^TMP("JLITEST",$J)) K @JLITEST
 ;D FILEINIT^XTMLOG("ZZUTXTD1")
 ;D INFO^XTMLOG("STARTING NEWTEST")
 ;D START^XTDEBUG(.ZZRESULT,"D DODIC^ZZUTXTD1")
 D START^XTDEBUG(.ZZRESULT,"D DOGETFIL^ZZUTXTD1")
 ;D START^XTDEBUG(.ZZRESULT,"D GETFILE^DIC0(.DIC,.DIFILEI,.DIENS)")
 ;D START^XTDEBUG(.ZZRESULT,"S X=$$OR2^JLITEST1(10)")
 ;D START^XTDEBUG(.ZZRESULT,"D DTEST^JLITEST1(.DIC,DUZ,IO)")
 D INFO^XTMLOG("FROM START")
 M @JLITEST@(0)=^TMP("XTDEBUG",$J)
 F ZZUTXTD5=1:1:100 D
 . D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 . Q
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 Q
 ;
ARGS1 ;
 N VARA,VARB,VARC,DIC,XXX,C,ZZRESULT,X,Y,Z
 S DIC="^DIC(8,",DIC(0)="AEQZ"
 S XXX=10,C="CVALUE"
 K ^XTMP("ZZUTXTG1")
 ;D FILEINIT^XTMLOG("ZZUTXTG1")
 D START^XTDEBUG(.ZZRESULT,"D DTEST^ZZUTXTD1(.DIC,XXX,C)")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKTF^XTMUNIT($D(A)=11,"Incorrect $D for passed by reference")
 D CHKEQ^XTMUNIT($G(A),"^DIC(8,","Bad value for A passed by reference")
 D CHKEQ^XTMUNIT($G(A(0)),"AEQZ","Bad value for A(0) passed by reference")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKTF^XTMUNIT($D(DIC(1))=1,"New subscripted value not returned by reference")
 D CHKEQ^XTMUNIT($G(DIC(1)),"NEW VALUE1","Incorrect value returned by reference")
 D CHKEQ^XTMUNIT(X,"^DIC(8, 10","Bad value set from arguments")
 D CHKEQ^XTMUNIT(Y,"CVALUE","Bad value set from arguments 2")
 D ENDLOG^XTMLOG("ZZUTXTG1")
 Q
 ;
ARGS2 ;
 N VARA,VARB,VARC,DIC,XXX,C,ZZRESULT,X,Y,Z,A
 S DIC="^DIC(8,",DIC(0)="AEQZ"
 S XXX=10,C="CVALUE"
 K ^XTMP("ZZUTXTG1")
 ;D FILEINIT^XTMLOG("ZZUTXTG1")
 ; pass array by reference
 D START^XTDEBUG(.ZZRESULT,"D DTEST^ZZUTXTD1(.DIC,XXX,C)")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKTF^XTMUNIT($D(A)=11,"Incorrect $D for passed by reference")
 D CHKEQ^XTMUNIT($G(A),"^DIC(8,","Bad value for A passed by reference")
 D CHKEQ^XTMUNIT($G(A(0)),"AEQZ","Bad value for A(0) passed by reference")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKEQ^XTMUNIT($G(DIC),"NEW VALUE","Changed value not returned by reference")
 D CHKTF^XTMUNIT($D(DIC(1))=1,"New subscripted value not returned by reference")
 D CHKEQ^XTMUNIT($G(DIC(1)),"NEW VALUE1","Incorrect value returned by reference")
 D CHKEQ^XTMUNIT(X,"^DIC(8, 10","Bad value set from arguments")
 D CHKEQ^XTMUNIT(Y,"CVALUE","Bad value set from arguments 2")
 D ENDLOG^XTMLOG("ZZUTXTG1")
 ; do not pass first argument by reference, only DIC value
 K DIC,XXX,C,X,Y
 S DIC="^DIC(8,",DIC(0)="AEQZ",XXX=10,C="CVALUE"
 K ^XTMP("ZZUTXTG1")
 ;D FILEINIT^XTMLOG("ZZUTXTG1")
 D START^XTDEBUG(.ZZRESULT,"D DTEST^ZZUTXTD1(DIC,XXX,C)")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKTF^XTMUNIT($D(A)=1,"Incorrect $D not passed by reference")
 D CHKEQ^XTMUNIT($G(A),"^DIC(8,","Bad value for A not passed by reference")
 D CHKEQ^XTMUNIT($D(A(0)),0,"A(0) exists NOT passed by reference")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 ;
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D CHKTF^XTMUNIT($D(DIC)>1,"DIC not returnded correctly")
 D CHKTF^XTMUNIT($D(DIC(1))=0,"New subscripted value added when not returned by reference")
 D CHKEQ^XTMUNIT($D(A),0,"VARIABLE A LEAKED FROM CALL")
 D CHKEQ^XTMUNIT(X,"^DIC(8, 10","Bad value set from arguments")
 D CHKEQ^XTMUNIT(Y,"CVALUE","Bad value set from arguments 2")
 D ENDLOG^XTMLOG("ZZUTXTG1")
 Q
 ;
POPTEST1 ;
 N ZZRESULT,B,JUNK,A S B="THIS ONE",A=15,A(0)=5,A(1)=3
 D START^XTDEBUG(.ZZRESULT,"D POPTEST^ZZUTXTD1(.A)")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 Q
 ;
RUNDI ;
 Q
 N ZZRESULT
 ;D FILEINIT^XTMLOG("ZZUTXTD1")
 D START^XTDEBUG(.ZZRESULT,"D Q^DI")
 F ZZUTXTDI=1:1:2000 D
 . D NEXT^XTDEBUG(.ZZRESULT,"STEP")
 . ;M ^TMP("JLITEST1",$J,ZZUTXTDI,"LVL")=^TMP("XTDEBUG",$J,"LVL")
 . ;M ^TMP("JLITEST1",$J,ZZUTXTDI,"VALUES")=^TMP("XTDEBUG",$J,"VALUES")
 D ENDLOG^XTMLOG("ZZUTXTD1")
 Q
XTROU ;
 ;;;ZZUTXTD1;
XTENT ;
 ;;RUNDI;
 ;
 ;;POPTEST1;
 ;;RETVALS;RETURN VALUES FROM GLOBAL
 ;;SETWATCH;SET WATCH VARIABLES
 ;;CLRWATCH;REMOVE WATCH VARIABLES
 ;;NEWTEST;
 ;;ARGS1;
 ;;ARGS2;
